# Monitoring and Alert Configuration for Repair Service
# Epic-001 Story 3: Monitoring setup

alerts:
  # Critical Alerts
  - name: repair_failure_rate_high
    condition: failure_rate > 0.05  # More than 5% failure rate
    duration: 5m
    severity: critical
    description: "Repair service failure rate exceeds 5%"
    actions:
      - notify: ["engineering-team", "on-call"]
      - escalate_after: 15m

  - name: repair_api_down
    condition: availability < 0.99  # Less than 99% availability
    duration: 2m
    severity: critical
    description: "Repair API is not responding"
    actions:
      - notify: ["engineering-team", "on-call"]
      - auto_restart: true

  # Warning Alerts
  - name: repair_response_time_slow
    condition: p95_latency > 5000ms  # 95th percentile over 5 seconds
    duration: 10m
    severity: warning
    description: "Repair response time is degraded"
    actions:
      - notify: ["engineering-team"]
      - scale_up_threshold: 7500ms

  - name: repair_retry_exhausted
    condition: max_retry_count > 10/hour
    severity: warning
    description: "Too many repairs exhausting retry limits"
    actions:
      - notify: ["engineering-team"]
      - analyze_logs: true

  - name: deepseek_api_errors
    condition: external_api_errors > 20/hour
    severity: warning
    description: "High rate of DeepSeek API errors"
    actions:
      - notify: ["engineering-team"]
      - check_api_status: true

  # Info Alerts
  - name: repair_volume_spike
    condition: request_rate > 200% of baseline
    duration: 5m
    severity: info
    description: "Unusual spike in repair requests"
    actions:
      - notify: ["monitoring-channel"]
      - auto_scale: true

metrics:
  # Success Metrics
  repair_success_rate:
    type: gauge
    description: "Percentage of successful repairs"
    unit: percentage
    calculation: (successful_repairs / total_repairs) * 100
    target: "> 95%"

  repair_fix_quality:
    type: gauge
    description: "Average confidence score of generated fixes"
    unit: score
    calculation: average(fix_confidence_scores)
    target: "> 0.7"

  # Performance Metrics
  repair_latency_p50:
    type: histogram
    description: "50th percentile repair latency"
    unit: milliseconds
    target: "< 2000ms"

  repair_latency_p95:
    type: histogram
    description: "95th percentile repair latency"
    unit: milliseconds
    target: "< 5000ms"

  repair_latency_p99:
    type: histogram
    description: "99th percentile repair latency"
    unit: milliseconds
    target: "< 10000ms"

  # Volume Metrics
  repair_requests_per_minute:
    type: counter
    description: "Number of repair requests per minute"
    unit: requests/minute

  repair_errors_per_minute:
    type: counter
    description: "Number of repair errors per minute"
    unit: errors/minute

  # Retry Metrics
  repair_retry_count:
    type: counter
    description: "Number of retry attempts"
    unit: count
    labels: ["attempt_number", "error_type"]

  repair_retry_success_rate:
    type: gauge
    description: "Success rate of retried repairs"
    unit: percentage
    calculation: (successful_retries / total_retries) * 100
    target: "> 80%"

  # API Metrics
  deepseek_api_calls:
    type: counter
    description: "Number of calls to DeepSeek API"
    unit: count

  deepseek_api_tokens_used:
    type: counter
    description: "Total tokens consumed by DeepSeek API"
    unit: tokens

  deepseek_api_cost:
    type: counter
    description: "Estimated cost of DeepSeek API usage"
    unit: dollars
    calculation: tokens_used * cost_per_token

dashboards:
  - name: repair_service_overview
    refresh_interval: 30s
    panels:
      - title: "Success Rate"
        metric: repair_success_rate
        type: line_graph
        time_range: 1h

      - title: "Response Time (P95)"
        metric: repair_latency_p95
        type: line_graph
        time_range: 1h

      - title: "Request Volume"
        metric: repair_requests_per_minute
        type: bar_chart
        time_range: 1h

      - title: "Error Rate"
        metric: repair_errors_per_minute
        type: line_graph
        time_range: 1h
        alert_threshold: 10

      - title: "Retry Statistics"
        metrics:
          - repair_retry_count
          - repair_retry_success_rate
        type: multi_line_graph
        time_range: 1h

      - title: "API Usage"
        metrics:
          - deepseek_api_calls
          - deepseek_api_tokens_used
        type: stacked_area
        time_range: 24h

  - name: repair_service_performance
    refresh_interval: 60s
    panels:
      - title: "Latency Distribution"
        metrics:
          - repair_latency_p50
          - repair_latency_p95
          - repair_latency_p99
        type: percentile_chart
        time_range: 1h

      - title: "Fix Quality Score"
        metric: repair_fix_quality
        type: gauge
        current_value: true

      - title: "Concurrent Repairs"
        metric: concurrent_repair_count
        type: line_graph
        time_range: 1h

slo:
  - name: repair_availability
    target: 99.9%
    window: 30d
    description: "Repair service should be available 99.9% of the time"

  - name: repair_latency
    target: "95% of requests < 5s"
    window: 7d
    description: "95% of repair requests should complete within 5 seconds"

  - name: repair_success
    target: "95% success rate"
    window: 7d
    description: "95% of repair attempts should succeed"

logging:
  level: INFO
  structured: true
  fields:
    - request_id
    - user_id
    - error_type
    - repair_duration
    - retry_count
    - api_calls
    - tokens_used
    - success
    - error_message

  retention:
    debug: 1d
    info: 7d
    warning: 30d
    error: 90d
    critical: 180d

monitoring_endpoints:
  - path: /metrics
    format: prometheus
    auth: bearer_token

  - path: /health
    format: json
    checks:
      - database_connection
      - deepseek_api_availability
      - memory_usage
      - cpu_usage

  - path: /ready
    format: json
    checks:
      - service_initialized
      - models_loaded
      - cache_available